class Solution {
    public int maxIncreaseKeepingSkyline(int[][] grid) {
        int[] cow=new int[grid.length];
        int[] row=new int[grid.length];
        int sum=0;
        for(int i=0;i<grid.length;i++)
        {
            int max=0;
            for(int j=0;j<grid[i].length;j++)
            {
                
                if(grid[i][j]>max)
                {
                    max=grid[i][j];
                }
            }
            row[i]=max;
        }
        for(int i=0;i<grid.length;i++)
        {
            int max=0;
            for(int j=0;j<grid[i].length;j++)
            {
                
                if(grid[j][i]>max)
                {
                    max=grid[j][i];
                }
            }
            cow[i]=max;
        }
        for(int i=0;i<grid.length;i++)
        {
            for(int j=0;j<grid[i].length;j++)
            {
                if(grid[i][j]<=row[i]||grid[j][i]<=cow[j])
                {
                    sum+=Math.min(row[i]-grid[i][j],cow[j]-grid[i][j]);
                }
            }
        }
        return sum;
    }
}
