/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 /*
 定义3个指针，分别指向当前遍历到的结点、它的前一个结点及后一个结点。
 在遍历过程中，首先记录当前节点的后一个节点，然后将当前节点的后一个
 节点指向前一个节点，其次前一个节点再指向当前节点，最后再将当前节点
 指向最初记录的后一个节点，如此反复，直到当前节点的后一个节点为NULL
 时，则代表当前节点时反转后的头结点了。
 */
 
class Solution {
    public ListNode reverseList(ListNode head) {
         ListNode prev=null;
         ListNode curr=head;
         ListNode next=null;
         while(curr!=null)
         {
             //当前节点的后一个节点
             next=curr.next;
             //当前节点的后一个节点指向前一个节点
             curr.next=prev;
             //前一个节点再指向当前节点
             prev=curr;
             //当前节点指向最初记录的后一个节点
             curr=next;
         }   
         return prev;
    }
}
